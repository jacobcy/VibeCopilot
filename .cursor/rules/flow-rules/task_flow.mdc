---
description: 当用户需要管理简单任务或Story的组成部分时,使用本规则
globs:
alwaysApply: false
---

# VibeCopilot 任务管理流程定义

> **重要提示**：本文件为流程规则(flow-rule)，不是直接执行入口。请使用 `/flow task` 或 `/task <子命令> [参数]` 命令来启动此流程。提及流程规则但不执行时，使用`{/flow task}`格式。

## 与命令规则的关系
本流程规则与`task-cmd.mdc`紧密配合：
- `task_flow.mdc`（本规则）定义任务的基本概念、类型标准和流程规范
- `task-cmd.mdc`定义任务管理的命令格式和执行流程

## 核心流程
1. 任务创建：通过`/task create <任务名称>`、`/task quick <任务名称>`或`/task debt <任务名称>`
2. 任务分配：设置任务的负责人
3. 任务跟踪：通过状态变更进行跟踪（待开始→进行中→已完成/阻塞）
4. 任务完成：使用`/task done <任务ID>`标记完成

## 任务类型定义
- **标准任务**：完整功能开发，通过`/task create`创建
- **快速任务**：小型修复，通过`/task quick`创建
- **技术债务**：重构工作，通过`/task debt`创建

## 任务状态流转
```mermaid
stateDiagram-v2
    [*] --> todo: 创建任务
    todo --> in_progress: /task start
    in_progress --> completed: /task done
    in_progress --> blocked: 更新状态
    blocked --> in_progress: 解除阻塞
    completed --> [*]
```

## 任务模板使用
系统使用以下预定义模板文件创建任务:
1. **标准任务**: `.cursor/templates/agile/task-template-enhanced.md`
2. **快速任务**: `.cursor/templates/agile/task-template.md`
3. **技术债务任务**: 自定义技术债务模板

### 模板变量替换
创建任务时，系统会自动替换模板中的变量:
```
{{task_id}} -> 自动生成的任务ID
{{story_id}} -> 关联的Story ID
{{task_title}} -> 任务标题
{{task_description}} -> 任务描述
{{priority}} -> 优先级
{{created_at}} -> 创建时间
```

### 标准任务模板结构
标准任务模板包含完整的字段:
- 元数据 (YAML frontmatter)
- 任务描述
- 实现细节
- 实现步骤
- 技术要点
- 完成标准
- 测试方法

### 快速任务模板结构
快速任务使用精简模板:
- 元数据 (YAML frontmatter)
- 任务描述
- 实现细节
- 完成标准

## 与其他流程集成
任务流程应与以下流程强制集成：
1. **Spec Flow**: 从需求规格生成任务
2. **Review Flow**: 完成任务前进行代码审查
3. **Commit Flow**: 提交代码时关联任务
4. **Story Flow**: 任务属于特定用户故事

## 约束与限制
- 每个任务必须有唯一ID
- 标准任务ID必须遵循特定格式（如`T{故事ID}.{序号}`）
- 快速任务使用QT前缀（如`QT001`）
- 技术债务任务使用TD前缀（如`TD001`）
- 任务状态必须是预定义的值之一
- 任务完成时必须记录实际工时

## 命令注释用法
使用`{/flow task}`格式表示提及流程而非执行：
```
讨论任务流程时，使用{/flow task}表示提及流程而非执行，例如：
"关于{/flow task}流程，它定义了任务的生命周期"
```

## 示例

<example>
  用户: `/task create API集成测试 --story=S3.2`

  系统响应:
  ```
  📝 已创建新任务
  任务ID: T3.2.1
  标题: API集成测试
  状态: 待开始
  ```

  任务流程开始指导:
  ```
  请按以下步骤处理此任务:
  1. 编写测试计划
  2. 实现测试用例
  3. 运行测试并记录结果
  4. 修复发现的问题
  5. 提交测试报告
  ```
</example>

<example type="invalid">
  用户: `@task_flow.mdc 我想完成任务`

  系统响应:
  ```
  ❓ 是否需要完成当前任务?
  请使用: /task done <任务ID> [--hours=<工时>]
  ```
</example>
