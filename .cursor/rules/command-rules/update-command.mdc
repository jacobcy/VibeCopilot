---
description:当用户输入/update命令时,执行开发状态更新命令
globs:
alwaysApply: false
---

# VibeCopilot 开发状态更新命令处理器

## 关键规则

- 当用户输入`/update`命令时，更新开发对象的状态、进度或相关信息
- 必须指定要更新的对象ID或更新类型
- 支持更新状态和进度百分比，自动记录到开发日志
- 自动更新相关联对象，提供清晰反馈
- 支持与GitHub项目和本地故事板双向同步

## 概念映射关系

```mermaid
graph TD
    Epic[Epic] --> Story[Story]
    Story --> Task[Task]

    RoadmapTask[".ai/roadmap/"] <-.-> Story
    GitHubIssue["GitHub Issue"] <-.-> Task
    GitHubMilestone["GitHub Milestone"] <-.-> Epic

    classDef local fill:#e1f5fe,stroke:#01579b
    classDef remote fill:#fce4ec,stroke:#c2185b

    class Epic,Story,Task local
    class GitHubIssue,GitHubMilestone,RoadmapTask remote
```

- **Epic**: `.ai/epics/`目录，映射到路线图milestone和GitHub milestone
- **Story**: `.ai/stories/`目录，映射到路线图task和GitHub里程碑任务
- **Task**: `.ai/tasks/`目录，映射到路线图具体任务和GitHub issue

## 命令格式规范

### 对象状态更新命令
```
/update --id=<对象ID> [--status=<新状态>] [--progress=<百分比>] [--note=<说明>] [--github]
```

参数说明:
- `--id`: 必选，对象ID (task-001/story-002/epic-001)
- `--status`: 对象新状态
  - Epic: planned/in-progress/completed/cancelled
  - Story: draft/ready/in-progress/review/completed
  - Task: todo/in-progress/completed/blocked
- `--progress`: 进度百分比(0-100)
- `--note`: 更新说明
- `--github`: 是否同步到GitHub

### 路线图更新命令
```
/update roadmap [--init] [--check] [--sync-stories] [--sync-github] [--direction=<方向>]
```

参数说明:
- 无参数: 检查story进度一致性，同步路线图
- `--init`: 初始化路线图，使用base.yaml新结构
- `--check`: 基于git提交历史分析进度并更新
- `--sync-stories`: 故事板与路线图双向同步
- `--sync-github`: 与GitHub项目管理同步
- `--direction`: 同步方向(to-github/from-github/to-stories/from-stories)

### 命令实现机制

命令实际执行采用以下机制：

1. **对象状态更新**:
   - 实现脚本: `src/cli/commands/update_status.py`
   - GitHub同步: 当添加`--github`参数时，会调用`src/github/roadmap/sync_github.py`

2. **路线图更新**:
   - 基本更新: `src/cli/commands/update_roadmap.py`
   - Git分析: `src/cli/commands/analyze_git.py`
   - 故事板同步: `src/cli/commands/sync_stories.py`
   - GitHub同步: `src/github/roadmap/sync_github.py`

命令会检查必要的环境变量，包括：
- `GITHUB_TOKEN`: GitHub访问令牌，用于访问GitHub API
- `GITHUB_OWNER`: GitHub仓库所有者
- `GITHUB_REPO`: GitHub仓库名称

如需启用GitHub同步功能，请确保在`.env`文件中配置以上环境变量。

## 核心工作流程

```mermaid
flowchart TD
    A[开始] --> B[验证请求]
    B --> C[执行更新]
    C --> D[级联更新]
    D --> E[同步存储]
    E --> F1{同步故事板?}
    F1 -->|是| F2[故事板同步]
    F1 -->|否| G1{同步GitHub?}
    F2 --> G1
    G1 -->|是| G2[GitHub同步]
    G1 -->|否| H[显示结果]
    G2 --> H
```

## 同步机制

### 故事板同步
- **映射规则**:
  - Story状态映射到路线图task状态
  - 路线图进度反馈到Story
- **冲突解决**: 本地优先，自动更新次之，远程最后
- **同步方向**: 支持双向、单向故事到路线图、单向路线图到故事

### GitHub同步
- **映射规则**:
  - Task → GitHub Issue
  - Story → GitHub Task
  - Epic → GitHub Milestone
- **数据映射**: 状态、标签、完成度双向同步
- **权限控制**: 需要有效GitHub Token

## 反馈格式示例

### 任务更新
```
✅ 任务更新成功!
task-004 "分支管理自动化" 已标记为已完成
所属故事进度: 80% (↑20%)
[同步]: 已同步到故事板和GitHub Issue #24
```

### 路线图更新 (检查)
```
📊 路线图检查完成!
分析了30天154次提交，识别4个功能模块变更，发现5个已完成任务
更新内容:
- GitDiagram集成: 100% ✅
- 命令系统: 65% 🚧
- 知识库管理: 0% 📝
[进度报告]: .ai/reports/progress.md
```

### 路线图同步
```
🔄 同步完成! 处理12个故事/15个任务/8个GitHub Issue
- 更新: 3个故事状态，5个任务进度，4个GitHub Issue
- 创建: 2个新故事文件，1个新路线图任务
- 解决: 2个状态冲突
[日志]: .ai/logs/sync_2023-04-05.log
```

## 数据源与实现

### 数据源
- `.ai/{epics|stories|tasks}/`: 本地对象存储
- `.ai/roadmap/`: 路线图配置与当前状态
- `.ai/reports/`: 生成的进度报告
- GitHub API: 远程项目管理

### 核心功能
- 状态验证与进度计算
- Git历史分析与进度识别
- 多方向同步与冲突解决
- 智能状态转换与推荐

## 示例

<example>
  用户: `/update --id=task-004 --status=completed --note="完成分支管理" --github`

  系统响应:
  ```
  ✅ 任务更新成功!
  task-004 "分支管理自动化" 已标记为已完成
  所属故事 story-002 进度: 80% (↑20%)
  [同步]: 已同步到GitHub Issue #24
  ```

  用户: `/update roadmap --check`

  系统响应:
  ```
  📊 路线图检查完成!
  分析30天112次提交，识别4个模块变更，3个未更新任务
  更新内容:
  - GitDiagram集成: 100% ✅
  - 命令系统开发: 65% 🚧
  - 知识库管理: 0% 📝
  [进度报告]: .ai/reports/progress.md
  ```

  用户: `/update roadmap --sync-stories --sync-github`

  系统响应:
  ```
  🔄 同步完成! 处理8个故事/12个任务/5个GitHub Issue
  - 更新: 2个故事状态，4个任务进度，3个GitHub Issue
  - 创建: 1个新故事文件
  - 解决: 1个状态冲突
  [日志]: .ai/logs/sync_2023-04-05.log
  ```
</example>

<example type="invalid">
  用户: `/update --id=task-004 --status=completed`
  系统响应: `任务已更新`
  问题: 反馈过于简单，缺乏详细信息和上下文

  用户: `/update roadmap`
  系统响应: `正在更新roadmap.yaml...完成`
  问题: 未提供明确信息，缺少变更详情和同步状态
</example>
