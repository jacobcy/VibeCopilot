---
description: 当用户输入/flow或//flow命令时，管理和执行VibeCopilot中定义的各种流程
globs:
alwaysApply: false
id: flow-command
title: "VibeCopilot流程命令规则"
type: command_rule
status: active
version: "1.0"
tags: [command, flow, workflow, rule]
related_items: [command-system]
---

# VibeCopilot流程命令规则

## 流程命令概述

流程命令(`/flow`和`//flow`)用于管理VibeCopilot中定义的各种工作流和流程，包括创建、执行、查看和管理工作流定义及其会话实例。

## 命令类型和执行方式

### 规则命令形式

- 命令格式：`/flow [subcommand] [args]`
- 执行方式：由Cursor Agent直接解释执行
- 适用场景：简单查询、单步执行和交互指导

### 程序命令形式

- 命令格式：`//flow [subcommand] [args]`
- 执行方式：转换为`vibecopilot flow [subcommand] [args]`并通过终端执行
- 适用场景：复杂工作流执行、会话管理和持久化操作 |

## 工作流上下文使用

工作流执行会创建和维护上下文，用于跨阶段传递信息：

1. 上下文在工作流会话中持久保存
2. 上下文可通过`/flow context`命令查看
3. 工作流可访问上下文中的变量和状态
4. 各阶段的输出会自动添加到上下文中
5. 上下文可用于后续阶段的决策和执行

## 流程引导功能

调用`//flow next`会自动引导用户完成整个流程：

1. 显示工作流概述和目标
2. 展示当前阶段任务和要求
3. 提供完成当前阶段的指导
4. 在完成后建议下一步操作
5. 根据情境提供相关资源和参考

## 与其他命令的集成

- **任务集成**：工作流可自动创建和更新任务
- **规则集成**：工作流可应用特定阶段的规则
- **状态集成**：工作流可更新项目状态
- **记忆集成**：工作流可记录和检索知识库内容

## 程序命令参数表
(需要在终端将用户指令转换成vibecopilot可接受的命令形式)

<!-- BEGIN_COMMAND_YAML -->
```yaml
commands:
  flow session list: # 列出所有会话
    options:
      --verbose: # 显示详细信息
      --format: # 输出格式
      --status: # 按状态筛选会话
      --flow: # 按工作流ID筛选会话
  flow session show: # 显示特定会话的详细信息
    arguments:
      id_or_name: # 会话ID或名称
    options:
      --verbose: # 显示详细信息
      --format: # 输出格式
  flow session create: # 创建并启动新会话
    options:
      --flow: # 工作流ID
      --name: # 会话名称
      --task: # 关联的任务ID
      --verbose: # 显示详细信息
  flow session close: # 结束会话
    arguments:
      id_or_name: # 会话ID或名称
    options:
      --reason: # 会话结束原因
      --force: # 强制结束，不提示确认
      --verbose: # 显示详细信息
  flow session switch: # 切换当前活动会话
    arguments:
      id_or_name: # 会话ID或名称
    options:
      --verbose: # 显示详细信息
  flow session update: # 更新会话属性
    arguments:
      id_or_name: # 会话ID或名称
    options:
      --name: # 新的会话名称
      --status: # 设置会话状态
      --verbose: # 显示详细信息
  flow session delete: # 永久删除会话（不可恢复）
    arguments:
      id_or_name: # 会话ID或名称
    options:
      --force: # 强制删除，不提示确认
      --verbose: # 显示详细信息
  flow list: # 列出所有工作流定义
    options:
      --type: # 按工作流类型筛选
      --verbose: # 显示详细信息
  flow show: # 查看会话或工作流定义详情
    arguments:
      id: # 工作流或会话ID
    options:
      --flow: # 查看工作流定义而非会话信息
      --format: # 输出格式
      --diagram: # 在输出中包含Mermaid图表
      --verbose: # 显示详细信息
  flow create: # 创建工作流定义
    options:
      --source: # 源文件路径
      --template: # 工作流模板路径
      --name: # 工作流名称
      --output: # 输出工作流文件路径
      --verbose: # 显示详细信息
  flow update: # 更新工作流定义
    arguments:
      id: # 工作流ID
    options:
      --name: # 新的工作流名称
      --desc: # 新的工作流描述
      --verbose: # 显示详细信息
  flow delete: # 删除工作流定义
    arguments:
      workflow_id: # 工作流ID
    options:
      --force: # 强制删除
      --verbose: # 显示详细信息
  flow export: # 导出工作流定义
    arguments:
      workflow_id: # 工作流ID
    options:
      --format: # 输出格式
      --output: # 输出路径
      --verbose: # 显示详细信息
  flow import: # 导入工作流定义
    arguments:
      file_path: # 文件路径
    options:
      --name: # 导入后使用的工作流名称
      --verbose: # 显示详细信息
  flow context: # 获取并解释工作流阶段上下文
    arguments:
      stage_id: # 阶段ID
    options:
      --session: # 会话ID或名称
      --completed: # 标记为已完成的检查项名称或ID
      --format: # 输出格式
      --verbose: # 显示详细信息
  flow next: # 获取下一阶段建议
    options:
      --session: # 会话ID或名称
      --current: # 当前阶段ID
      --format: # 输出格式
      --verbose: # 显示详细信息
  flow validate: # 验证工作流文件一致性
    options:
      --id: # 工作流ID
      --fix: # 自动修复问题
      --verbose: # 显示详细信息
  flow visualize: # 可视化工作流结构和进度
    arguments:
      id: # 工作流或会话ID
    options:
      --session: # 目标是会话ID而非工作流ID
      --format: # 输出格式
      --output: # 输出文件路径
      --verbose: # 显示详细信息
```
<!-- END_COMMAND_YAML -->
