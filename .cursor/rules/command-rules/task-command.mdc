---
description: 当用户输入/task命令时,管理项目任务
globs:
alwaysApply: false
---

# VibeCopilot 任务管理命令处理器

## 命令目的
`/task`命令用于管理VibeCopilot的开发任务，包括创建任务、更新任务状态、查看任务列表和详情。

## 规则关系
本命令规则与`task_flow.mdc`紧密配合：
- `task_flow.mdc`定义任务的基本概念、类型标准和流程规范
- `task-command.mdc`（本规则）定义任务管理的命令格式和执行流程

## 命令格式规范
基本语法: `/task [子命令] [参数]`

子命令:
- 无子命令: 显示当前活跃任务信息
- `create <任务名称>`: 创建新任务
- `quick <任务名称>`: 创建快速任务（小修复）
- `debt <任务名称>`: 创建技术债务任务（重构）
- `start <任务ID>`: 开始执行任务
- `done <任务ID>`: 完成任务
- `list`: 列出所有符合条件的任务

参数说明:
- `--id`: 可选，指定任务ID，若提供则设为当前任务
- `--status`: 可选，更新任务状态
- `--assignee`: 可选，设置任务负责人
- `--list`: 可选，列出所有未完成任务
- `--priority`: 可选，设置任务优先级(P0/P1/P2/P3)
- `--story`: 可选，关联到特定Story
- `--hours`: 可选，设置估计或实际工时

## 命令执行流程

```mermaid
flowchart TD
    A[开始] --> B{子命令?}
    B -->|无| C{提供了任务ID?}
    B -->|create| N[创建新任务]
    B -->|quick| O[创建快速任务]
    B -->|debt| P[创建技术债务任务]
    B -->|start| Q[开始任务]
    B -->|done| R[完成任务]
    B -->|list| S[列出任务]
    C -->|是| D[查找任务]
    C -->|否| E[显示当前活跃任务]
```

## 子命令处理规范

### 创建任务 (`/task create <任务名称>`)
创建新的标准任务，使用task-template-enhanced.md模板:
1. 生成唯一任务ID (T前缀)
2. 创建任务文件，使用模板变量替换
3. 设置任务状态为"待开始"
4. 可选关联到Story

### 快速任务 (`/task quick <任务名称>`)
创建小型快速任务，使用task-template.md模板:
1. 生成唯一任务ID (QT前缀)
2. 创建简化版任务文件
3. 适用于小型修复和调整

## 显示内容规范

### 当前任务显示 (`/task`)
显示当前活跃任务的基本信息、所属里程碑、状态、负责人和相关依赖任务。

### 任务列表显示 (`/task list` 或 `/task --list`)
按状态分组显示任务列表，包括ID、标题、优先级和负责人。

## 命令注释用法
使用`{/task}`格式表示提及命令而非执行：
```
讨论任务管理时，使用{/task}表示提及命令而非执行，例如：
"关于{/task}命令，它用于管理开发任务"
```

## 与其他命令的集成
- `/flow task`: 启动完整任务流程
- `/story`: 显示包含哪些任务
- `/update`: 记录变更原因和细节
- `/check`: 提供整体项目状态
- `/plan`: 创建新任务

## 示例

<example>
  用户: `/task create 实现用户头像上传功能 --story=S4.1`

  系统响应:
  ```
  📝 已创建新任务
  任务ID: T4.1.2
  标题: 实现用户头像上传功能
  状态: 待开始
  优先级: P1
  所属Story: S4.1 "用户配置中心"
  ```

  用户: `/task start T4.1.2`

  系统响应:
  ```
  ▶️ 任务已开始!
  任务ID: T4.1.2
  标题: 实现用户头像上传功能
  状态: 进行中 (之前: 待开始)
  开始时间: 2024-05-06 14:30
  ```
</example>

<example type="invalid">
  用户: `@task_flow.mdc 我需要创建一个任务`

  系统响应:
  ```
  ❓ 是否需要创建新任务?
  请使用: /task create <任务名称> [--story=<故事ID>]
  ```
</example>

## 实现细节

### 数据源
- `.ai/roadmap/current.yaml`: 主要数据源，包含任务详细信息
- `.ai/tasks/`: 存储任务文件
- `.cursor/templates/agile/`: 存储任务模板
- GitHub API: 同步任务状态
- `.ai/cache/current_task.json`: 存储当前活跃任务
