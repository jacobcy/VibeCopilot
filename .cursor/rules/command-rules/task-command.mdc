---
description: 当用户输入/task命令时,管理项目任务
globs:
alwaysApply: false
---

# VibeCopilot 任务管理命令处理器

## 关键规则

- 当用户输入`/task`命令时，查看和管理当前任务
- 使用`/task create <任务名称>`创建新任务
- 使用`/task quick <任务名称>`创建快速任务（小型修复）
- 使用`/task debt <任务名称>`创建技术债务任务（重构）
- 支持设置特定任务为当前活跃任务
- 支持更新任务状态、优先级和负责人
- 支持查看任务列表和详情
- 提供任务间的依赖关系可视化

## 模板使用规则

- 标准任务使用 `.cursor/templates/agile/task-template-enhanced.md` 模板
- 快速任务使用 `.cursor/templates/agile/task-template.md` 模板
- 技术债务任务使用自定义模板

## 命令格式规范

基本语法: `/task [子命令] [参数]`

子命令:
- 无子命令: 显示当前活跃任务信息
- `create <任务名称>`: 创建新任务
- `quick <任务名称>`: 创建快速任务（小修复）
- `debt <任务名称>`: 创建技术债务任务（重构）
- `start <任务ID>`: 开始执行任务
- `done <任务ID>`: 完成任务
- `list`: 列出所有符合条件的任务

参数说明:
- `--id`: 可选，指定任务ID，若提供则设为当前任务
- `--status`: 可选，更新任务状态(todo/in_progress/completed/blocked)
- `--assignee`: 可选，设置任务负责人
- `--list`: 可选，列出所有未完成任务
- `--priority`: 可选，设置任务优先级(P0/P1/P2/P3)
- `--detail`: 可选，显示详细任务信息
- `--story`: 可选，关联到特定Story
- `--hours`: 可选，设置估计或实际工时

## 命令执行流程

```mermaid
flowchart TD
    A[开始] --> B{子命令?}
    B -->|无| C{提供了任务ID?}
    B -->|create| N[创建新任务]
    B -->|quick| O[创建快速任务]
    B -->|debt| P[创建技术债务任务]
    B -->|start| Q[开始任务]
    B -->|done| R[完成任务]
    B -->|list| S[列出任务]

    C -->|是| D[查找任务]
    C -->|否| E[显示当前活跃任务]

    D --> F{提供了状态/优先级/负责人?}
    F -->|是| G[更新任务属性]
    F -->|否| H{使用了--detail?}
    H -->|是| I[显示详细信息]
    H -->|否| J[显示基本信息]

    G --> K[更新roadmap.yaml]
    K --> L[GitHub同步]

    N --> M[生成任务ID和文件]
    O --> M
    P --> M

    Q --> T[更新状态为进行中]
    R --> U[更新状态为已完成]

    E --> V[结束]
    I --> V
    J --> V
    L --> V
    M --> V
    S --> V
    T --> V
    U --> V
```

## 子命令处理规范

### 创建任务 (`/task create <任务名称>`)

创建新的标准任务，使用task-template-enhanced.md模板:

1. 生成唯一任务ID (T前缀)
2. 创建任务文件，使用模板变量替换
3. 设置任务状态为"待开始"
4. 可选关联到Story

```
📝 已创建新任务

任务ID: T4.1
标题: 实现用户设置页面
状态: 待开始
优先级: P1
所属Story: S4 "用户配置功能" (可选)

任务文件已创建: .ai/tasks/task-T4.1.md
使用模板: .cursor/templates/agile/task-template-enhanced.md
GitHub Issue已创建: #25

任务已设为当前活跃任务。
使用 `/task start T4.1` 开始此任务。
```

### 快速任务 (`/task quick <任务名称>`)

创建小型快速任务，使用task-template.md模板:

1. 生成唯一任务ID (QT前缀)
2. 创建简化版任务文件
3. 适用于小型修复和调整

```
🔧 已创建快速任务

任务ID: QT001
标题: 修复登录按钮样式
类型: 缺陷修复
状态: 待开始
优先级: P2

任务文件已创建: .ai/tasks/quick-QT001.md
使用模板: .cursor/templates/agile/task-template.md
预计耗时: <2小时

任务已设为当前活跃任务。
使用 `/task start QT001` 开始此任务。
```

## 模板变量替换

创建任务时，系统会自动替换模板中的变量:

```
{{task_id}} -> 自动生成的任务ID
{{story_id}} -> 关联的Story ID
{{task_title}} -> 任务标题
{{task_description}} -> 任务描述
{{priority}} -> 优先级
{{created_at}} -> 创建时间
{{updated_at}} -> 更新时间
{{assigned_to}} -> 负责人
{{estimated_hours}} -> 估计工时
```

## 显示内容规范

### 当前任务显示 (`/task`)

显示当前活跃任务的基本信息、所属里程碑、状态、负责人和相关依赖任务。

```
📝 当前活跃任务:

任务ID: T2.2
标题: 状态管理模块
状态: 进行中
优先级: P0
负责人: 张三
所属里程碑: M2 "核心功能开发阶段"

描述:
实现应用状态管理核心模块，包括状态存储、更新和订阅机制

相关任务:
- 前置依赖: T2.1 "核心引擎实现" (已完成)
- 后置任务: T2.4 "AI集成基础功能" (待开始)

预计完成时间: 2024-01-25 (还剩8天)
```

### 任务列表显示 (`/task list` 或 `/task --list`)

按状态分组显示任务列表，包括ID、标题、优先级和负责人。

```
📋 任务列表:

【进行中】
▶ T2.2 "状态管理模块" (P0, 张三)

【待开始】
▶ T2.3 "文档管理系统" (P1, 未分配)
▶ T2.4 "AI集成基础功能" (P1, 李四)
▶ T3.1 "高级特性实现" (P2, 未分配)

【阻塞中】
⚠ T3.2 "插件系统开发" (P1, 王五) - 等待依赖任务T2.4完成

共8个任务: 1个进行中, 3个待开始, 1个阻塞, 3个已完成
```

## 与其他命令的集成

- `/flow task`: 启动完整任务流程
- `/story`: 显示包含哪些任务
- `/update`: 记录变更原因和细节
- `/check`: 提供整体项目状态
- `/plan`: 创建新任务

## 示例

<example>
  用户: `/task create 实现用户头像上传功能 --story=S4.1`

  系统响应:
  ```
  📝 已创建新任务

  任务ID: T4.1.2
  标题: 实现用户头像上传功能
  状态: 待开始
  优先级: P1
  所属Story: S4.1 "用户配置中心"

  任务文件已创建: .ai/tasks/task-T4.1.2.md
  使用模板: .cursor/templates/agile/task-template-enhanced.md
  GitHub Issue已创建: #32

  任务已设为当前活跃任务。
  使用 `/task start T4.1.2` 开始此任务。
  ```

  用户: `/task start T4.1.2`

  系统响应:
  ```
  ▶️ 任务已开始!

  任务ID: T4.1.2
  标题: 实现用户头像上传功能
  状态: 进行中 (之前: 待开始)
  开始时间: 2024-05-06 14:30
  所属Story: S4.1 "用户配置中心"

  任务现在设为当前活跃任务
  GitHub Issue #32 已更新状态
  ```

  用户: `/task done T4.1.2 --hours=3.5`

  系统响应:
  ```
  ✅ 任务已完成!

  任务ID: T4.1.2
  标题: 实现用户头像上传功能
  状态: 已完成 (之前: 进行中)
  完成时间: 2024-05-06 18:00
  实际工时: 3.5小时
  所属Story: S4.1 "用户配置中心" (进度更新: 75% ↑25%)

  GitHub Issue #32 已关闭
  建议使用 `/flow commit` 提交相关代码
  ```
</example>

<example type="invalid">
  用户: `@task_flow.mdc 我需要创建一个任务`

  系统响应:
  ```
  ❓ 是否需要创建新任务?

  我注意到您引用了task_flow规则。如果您想创建新任务，请使用:

  /task create <任务名称> [--story=<故事ID>]

  或者使用快速任务命令:

  /task quick <任务名称> --type=<bug|enhance|docs>
  ```
</example>

## 实现细节

### 数据源

- `.ai/roadmap/current.yaml`: 主要数据源，包含任务详细信息
- `.ai/tasks/`: 存储任务文件
- `.cursor/templates/agile/`: 存储任务模板
- GitHub API: 同步任务状态
- `.ai/cache/current_task.json`: 存储当前活跃任务

### 处理逻辑

任务查找和更新操作使用`src.cli.task_manager`模块实现，包括状态验证、依赖检查和更新记录等功能。GitHub同步通过`src.cli.github_api`模块完成。
