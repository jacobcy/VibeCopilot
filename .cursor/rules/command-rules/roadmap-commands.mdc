---
description: 当用户输入/roadmap或//roadmap命令时,获得项目活动路线图支持
globs:
alwaysApply: false
id: roadmap-command
title: "VibeCopilot路线图命令规则"
type: command_rule
status: active
version: "1.0"
tags: [command, roadmap, planning, rule]
related_items: [command-system]
---

# VibeCopilot路线图命令规则

## 路线图命令概述

路线图命令(`/roadmap`和`//roadmap`)用于管理项目路线图，包括创建、查看、更新和同步项目开发计划和重要里程碑。

## 命令类型和执行方式

### 规则命令形式

- 命令格式：`/roadmap [subcommand] [args]`
- 执行方式：由Cursor Agent直接解释执行
- 适用场景：简单查询、计划咨询和交互式规划

### 程序命令形式

- 命令格式：`//roadmap [subcommand] [args]`
- 执行方式：转换为`vibecopilot roadmap [subcommand] [args]`并通过终端执行
- 适用场景：创建/更新路线图、同步外部数据和持久化操作

## 路线图组成元素

路线图由以下核心元素组成：

1. **里程碑(Milestones)**：主要开发阶段和关键时间点
2. **史诗(Epics)**：大型功能集合，包含多个相关故事
3. **功能(Features)**：具体的产品功能点
4. **用户故事(Stories)**：从用户视角定义的功能需求
5. **任务(Tasks)**：具体的开发工作项

## 路线图视图

路线图可以通过不同视图进行查看：

| 视图类型 | 说明 | 调用方式 |
|---------|------|---------|
| 时间线视图 | 按时间轴展示里程碑和功能 | `/roadmap show <id> --view=timeline` |
| 功能视图 | 按功能组织展示计划内容 | `/roadmap show <id> --view=feature` |
| 进度视图 | 显示各项目进度和状态 | `/roadmap show <id> --view=progress` |
| 依赖视图 | 显示项目间依赖关系 | `/roadmap show <id> --view=dependency` |

## 路线图集成

路线图系统与其他系统的集成方式：

- **任务集成**：路线图项可自动同步为任务
- **流程集成**：路线图可触发相应工作流
- **状态集成**：路线图状态更新会反映在项目状态中
- **文档集成**：路线图可导出为文档和可视化图表

## 路线图生成与规划

使用`//roadmap plan`可触发交互式规划引导：

1. 分析项目需求和范围
2. 建议合理的里程碑划分
3. 提出特性和功能组织建议
4. 估算开发时间和资源需求
5. 生成初始路线图草案

## 路线图最佳实践

1. 路线图应定期更新以反映最新状态
2. 每个里程碑应有明确的目标和可衡量的成果
3. 功能应按优先级排序
4. 路线图应考虑依赖关系和资源限制
5. 路线图变更应记录变更原因

## 程序命令参数表
(需要在终端将用户指令转换成vibecopilot可接受的命令形式)

<!-- BEGIN_COMMAND_YAML -->
```yaml
commands:
  roadmap sync: # 从GitHub同步路线图数据 (用法: roadmap sync [OPTIONS] REPOSITORY)
    arguments:
      repository: # GitHub仓库 (格式: owner/repo)
    options:
      --theme: # GitHub项目主题标签
      --operation: # 同步操作类型
      --roadmap: # 指定路线图ID
      --force: # 强制同步，忽略冲突
      --verbose: # 显示详细输出
  roadmap switch: # 切换活动路线图
    arguments:
      roadmap_id: # 路线图ID
    options:
      --show: # 只显示当前活动路线图
      --clear: # 清除当前活动路线图设置
  roadmap list: # 列出路线图元素或所有路线图
    options:
      --all: # 列出所有路线图而非当前路线图中的元素
      --type: # 元素类型
      --status: # 按状态筛选
      --assignee: # 按负责人筛选
      --labels: # 按标签筛选，多个标签用逗号分隔
      --detail: # 显示详细信息
      --format: # 输出格式
      --verbose: # 显示详细信息
  roadmap create: # 创建新的路线图元素 (用法: roadmap create [OPTIONS] {milestone|epic|story} TITLE)
    arguments:
      element_type: # 要创建的元素类型
      title: # 元素标题
    options:
      --epic: # 所属史诗ID (用于story)
      --desc: # 详细描述
      --assignee: # 指派给用户
      --labels: # 标签列表，用逗号分隔
      --priority: # 优先级
  roadmap update: # 更新路线图元素状态 (用法: roadmap update [OPTIONS] {milestone|story|task} ID STATUS)
    arguments:
      element_type: # 要更新的元素类型
      element_id: # 元素ID
      status: # 新的状态
    options:
      --sync: # 同步到GitHub
      --comment: # 更新说明
      --assignee: # 更新指派人
      --labels: # 更新标签（用逗号分隔）
  roadmap story: # 管理路线图故事
    arguments:
      story_id: # 故事ID (可选，不提供则可能列出所有故事或基于上下文)
    options:
      --title: # 故事标题
      --milestone: # 所属里程碑ID
      --desc: # 故事描述
      --priority: # 优先级
      --assignee: # 指派给用户
      --labels: # 标签列表，用逗号分隔
      --status: # 更新状态
      --comment: # 状态变更说明
      --format: # 输出格式
      --delete: # 删除故事
      --force: # 强制删除，不请求确认
  roadmap validate: # 验证路线图YAML文件
    arguments:
      source_file: # 源文件路径
    options:
      --fix: # 自动修复格式问题
      --output: # 修复后输出的文件路径
      --template: # 使用自定义模板验证
      --verbose: # 显示详细信息
      --import: # 验证通过后导入路线图
      --roadmap-id: # 导入时指定路线图ID
  roadmap import: # 导入路线图YAML文件
    arguments:
      source_file: # 源文件路径
    options:
      --roadmap-id: # 现有路线图ID
      --fix: # 自动修复格式问题
      --activate: # 导入后设为当前活动路线图
      --verbose: # 显示详细信息
  roadmap show: # 查看路线图详情
    options:
      --id: # 路线图ID
      --milestone: # 里程碑ID
      --task: # 任务ID
      --health: # 显示健康状态检查
      --format: # 输出格式
  roadmap export: # 导出路线图为YAML
    arguments:
      roadmap_id: # 要导出的路线图ID (可选，也可用 --id)
    options:
      --id: # 要导出的路线图ID
      --output: # 输出文件路径
      --milestone: # 只导出特定里程碑及其任务
      --template: # 使用特定模板格式
  roadmap delete: # 删除路线图或元素 (用法: roadmap delete [OPTIONS] {roadmap|milestone|task} ID)
    arguments:
      element_type: # 要删除的元素类型
      element_id: # 元素ID
    options:
      --force: # 强制删除，不请求确认
      --cascade: # 级联删除关联元素
  roadmap plan: # 互动式路线图规划
    options:
      --id: # 要修改的路线图ID
      --template: # 使用特定模板开始
      --from: # 从YAML文件开始
      --interactive: # 始终使用交互式模式
```
<!-- END_COMMAND_YAML -->
