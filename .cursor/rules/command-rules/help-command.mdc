---
description:当用户输入/help命令时,执行帮助命令
globs:
alwaysApply: false
---

# VibeCopilot 帮助命令处理器

## 关键规则

- 当用户输入`/help`命令时，展示所有可用的开发命令及其简要说明
- 当用户输入`/help [命令名]`时，展示特定命令的详细用法
- 帮助信息应简洁明了，重点突出
- 显示命令语法、参数说明和使用示例
- 区分必选参数和可选参数
- 优先展示常用命令
- 根据用户当前上下文调整命令显示优先级

## 可用命令列表

```
VibeCopilot 开发命令系统 v1.0

核心命令:
/help    - 显示帮助信息
/check   - 检查开发进度
/update  - 更新开发状态
/story   - 管理用户故事
/task    - 管理开发任务
/plan    - 管理开发计划
/branch  - 管理Git分支
/flow    - 启动和管理开发流程
/memory  - 管理项目知识库

输入 /help [命令名] 获取特定命令的详细用法。
```

## 命令详细用法

### /help

```
命令: /help
用途: 显示帮助信息或查看特定命令的详细用法
语法: /help [命令名]
参数:
  [命令名] - 可选，要查看详细用法的命令名称
示例:
  /help
  /help task
```

### /check

```
命令: /check
用途: 检查项目开发进度和状态
语法: /check [--type=类型] [--id=标识符] [--status=状态]
参数:
  --type    - 可选，检查类型(epic/story/task/roadmap)，默认检查整体进度
  --id      - 可选，特定项目标识符，如E001、S002等
  --status  - 可选，筛选特定状态，如todo、in_progress、completed等
示例:
  /check
  /check --type=story
  /check --id=S002
```

### /update

```
命令: /update
用途: 更新开发对象的状态、进度或相关信息
语法: /update [子命令] [--id=对象ID] [--status=新状态] [--progress=进度百分比] [--note=更新说明]
子命令:
  roadmap  - 更新项目路线图
参数:
  --id        - 必选(无子命令时)，要更新的对象ID，如T001、S002等
  --status    - 可选，设置新状态，如todo、in_progress、completed等
  --progress  - 可选，更新进度百分比，0-100的整数
  --note      - 可选，添加更新说明，简短描述更新内容
示例:
  /update --id=T001 --status=completed --note="完成了基本功能实现"
  /update roadmap
```

### /story

```
命令: /story
用途: 管理用户故事
语法: /story [子命令] [参数...]
子命令:
  无子命令   - 显示当前活跃故事
  new      - 创建新故事
  confirm  - 确认故事PRD
  list     - 列出故事

创建新故事:
  /story new <故事标题> [--epic=史诗ID] [--milestone=里程碑ID]

确认故事:
  /story confirm <故事ID>

列出故事:
  /story list [--status=状态] [--epic=史诗ID]
示例:
  /story
  /story new 用户登录功能
  /story confirm S001
  /story list --status=active
```

### /task

```
命令: /task
用途: 管理开发任务
语法: /task [子命令] [参数...]
子命令:
  无子命令   - 显示当前活跃任务
  create    - 创建标准任务
  quick     - 创建快速任务
  debt      - 创建技术债务任务
  start     - 开始执行任务
  done      - 完成任务
  list      - 列出任务

创建标准任务:
  /task create <任务标题> [--story=故事ID] [--priority=优先级]

创建快速任务:
  /task quick <任务标题> [--type=bug|enhance|docs]

创建技术债务任务:
  /task debt <任务标题> [--scope=范围]

任务管理:
  /task start <任务ID>
  /task done <任务ID> [--hours=实际工时]
  /task list [--status=状态] [--story=故事ID]
示例:
  /task
  /task create 实现用户登录API --story=S001
  /task quick 修复登录按钮样式
  /task debt 重构认证模块
  /task start T001
  /task done T001 --hours=4.5
  /task list --status=in_progress
```

### /flow

```
命令: /flow
用途: 启动和管理开发流程
语法: /flow <流程名称> [参数...]
流程类型:
  story    - 需求确认与PRD生成流程
  spec     - 开发计划制定流程
  coding   - 代码开发流程
  test     - 测试流程
  review   - 审核流程
  commit   - 代码提交流程
示例:
  /flow story 用户认证功能
  /flow coding
  /flow commit
```

### /memory

```
命令: /memory
用途: 管理项目知识库
语法: /memory <子命令> [参数...]
子命令:
  save     - 保存内容到知识库
  read     - 读取知识库内容
  search   - 搜索知识库
  list     - 列出知识库内容
示例:
  /memory save --title="API设计文档" --path=dev/api
  /memory read --id=doc001
  /memory search --query="认证流程"
  /memory list --type=document
```

## 子命令通用规范

所有命令都遵循以下统一的子命令格式规范：

```
命令通用格式: /<命令名称> [子命令] [参数]

标准子命令:
- 无子命令: 显示当前对象信息
- new/create: 创建新对象
- list: 列出对象列表
- start: 开始执行
- done/complete: 完成对象
```

## 示例

<example>
  用户: `/help`

  系统响应:
  ```
  VibeCopilot 开发命令系统 v1.0

  核心命令:
  /help    - 显示帮助信息
  /check   - 检查开发进度
  /update  - 更新开发状态
  /story   - 管理用户故事
  /task    - 管理开发任务
  /plan    - 管理开发计划
  /branch  - 管理Git分支
  /flow    - 启动和管理开发流程
  /memory  - 管理项目知识库

  输入 /help [命令名] 获取特定命令的详细说明。
  ```

  用户: `/help task`

  系统响应:
  ```
  命令: /task
  用途: 管理开发任务

  语法: /task [子命令] [参数...]

  子命令:
    无子命令  - 显示当前活跃任务
    create   - 创建标准任务
    quick    - 创建快速任务
    debt     - 创建技术债务任务
    start    - 开始执行任务
    done     - 完成任务
    list     - 列出任务

  创建标准任务:
    /task create <任务标题> [--story=故事ID] [--priority=优先级]

  创建快速任务:
    /task quick <任务标题> [--type=bug|enhance|docs]

  创建技术债务任务:
    /task debt <任务标题> [--scope=范围]

  任务管理:
    /task start <任务ID>
    /task done <任务ID> [--hours=实际工时]
    /task list [--status=状态] [--story=故事ID]

  示例:
    /task create 实现用户登录API --story=S001
    /task quick 修复登录按钮样式
    /task start T001
    /task done T001 --hours=4.5
  ```
</example>

<example type="invalid">
  用户: `/help`

  系统响应:
  ```
  可以使用以下命令：
  /help - 显示帮助
  /check - 检查状态
  /task - 管理任务
  /story - 管理故事
  ```

  问题:
  - 帮助信息过于简略，缺少必要的说明
  - 没有解释如何获取详细帮助
  - 缺少格式化和分类
  - 未包含所有可用命令
</example>
