---
description: VibeCopilot项目的技术栈配置规则，包括环境设置、数据库配置和集成方案
globs:
alwaysApply: true
---
# VibeCopilot 技术栈与环境配置

## 项目定位与状态

- 项目当前处于演示阶段（demo）
- VibeCopilot定位为AI辅助开发工具
- 优先考虑核心功能实现而非完整性
- 快速迭代，构建最小可行产品

## VibeCopilot技术栈

- **前端**：React 18 + TypeScript 5.0+
- **后端**：Python 3.9+ (FastAPI/Flask)
- **数据库**：
  - **元数据存储**：SQLite (轻量级关系型数据库)
  - **知识库存储**：向量数据库 (用于规则检索和语义搜索)
- **AI集成**：Claude API
- **版本控制**：Git (GitHub)
- **CI/CD**：GitHub Actions

## VibeCopilot专用工具链

- **前端开发**：
  - pnpm 8.0+ 包管理
  - Vite 4.0+ 构建工具
  - React Router 6+ 路由
  - zustand/Redux 状态管理
  - tailwindcss 样式解决方案

- **后端开发**：
  - uv 包管理工具
  - FastAPI 0.95+ API框架
  - SQLAlchemy ORM
  - pytest 测试框架

- **质量与部署**：
  - ESLint + Prettier 前端质量控制
  - black + isort 后端代码格式化
  - Jest/Vitest 前端测试
  - Docker 容器化
  - Vercel/Netlify 前端部署
  - Python Anywhere 后端部署

## 核心目录结构

- `/src`：核心源代码目录
- `/tests`：测试代码目录
- `/config`：配置文件目录
- `/.github`：GitHub相关配置
- `/.cursor`：Cursor IDE配置
- `/.ai`：AI相关资源
- `/data`：数据存储目录
- `/website`：文档网站
- `/adapters`：适配器实现

## 环境变量配置

- `VIBECOPILOT_ENV`：运行环境 (`development`, `testing`, `production`)
- `CLAUDE_API_KEY`：Claude API密钥
- `DB_PATH`：数据库文件路径
- `VECTOR_DB_PATH`：向量数据库路径
- `LOG_LEVEL`：日志级别设置
- `PORT`：服务器端口
- `HOST`：服务器主机名

## MCP服务器配置

### 文件系统配置

- **允许目录**：`~/Public/VibeCopilot`
- **文件操作使用绝对路径**
- **默认临时目录**：`/tmp/vibecopilot`

### 记忆工具配置

- **项目目录**：`VibeCopilot`
- **内容分类**：`开发日志`、`决策记录`、`问题追踪`
- **存储位置**：`/.ai/memory`

### 时间工具配置

- **默认时区**：`Asia/Shanghai`
- **时间格式**：`YYYY-MM-DD HH:mm:ss`
- **日志时间戳**：`ISO 8601`格式

### Git工具配置

- **仓库路径**：`~/Public/VibeCopilot`
- **默认分支**：`main`
- **提交者信息**：从`.gitconfig`读取

## VibeCopilot外部集成

### Claude集成

- 使用Claude API提供代码生成和分析
- 使用prompt模板定制AI输出
- 使用规则引导AI行为
- 配置文件：`/config/default/claude.json`

### GitHub集成

- 使用GitHub Projects管理任务
- 使用GitHub Actions自动化测试和部署
- 使用GitHub Pages托管文档
- 配置文件：`/config/default/github.json`

### GitDiagram集成

- 使用GitDiagram生成代码可视化
- 基于提交历史分析项目演进
- 配置文件：`/config/default/gitdiagram.json`

## 相关技术规范文件

- **数据库规范**：参见`@tech-rules/database.mdc`
- **后端开发规范**：参见`@tech-rules/backend.mdc`
- **前端开发规范**：参见`@tech-rules/frontend.mdc`
