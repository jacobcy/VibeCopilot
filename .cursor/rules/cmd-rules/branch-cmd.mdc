---
description: 当用户输入/branch命令时,管理与任务关联的Git分支
globs:
alwaysApply: false
---

# VibeCopilot 分支管理命令处理器

## 命令目的
`/branch`命令用于管理与任务关联的Git分支，提供分支创建、切换、列出和关联功能，确保开发工作与任务追踪系统紧密集成。

## 规则关系
本命令规则与以下规则紧密配合：
- `flow.mdc`: 遵循流程检查点要求，确保分支操作符合强制流程
- `commit-flow.mdc`: 确保分支创建后的提交符合规范
- `task-cmd.mdc`: 与任务管理系统集成，维护任务与分支的关联

## 命令格式规范
基本语法: `/branch [参数]`

参数说明:
- `--create`: 创建新分支
- `--task=<ID>`: 指定关联的任务ID
- `--name=<名称>`: 自定义分支名称
- `--switch`: 创建后切换到新分支
- `--list`: 列出所有任务关联的分支
- `--link=<分支名>`: 关联已有分支到当前活跃任务
- `--base=<分支名>`: 指定基分支，默认为main

## 命令执行流程
```mermaid
flowchart TD
    A[开始] --> B{命令类型?}
    B -->|创建| C[检查任务是否存在]
    B -->|列出| D[获取所有分支]
    C --> G{任务存在?}
    G -->|是| H[检查流程前置条件]
    H --> I{前置条件满足?}
    I -->|是| J[创建Git分支]
    I -->|否| K[显示条件不满足]
```

## 前置条件检查
分支创建前强制检查流程条件:
1. 功能分支创建前，必须有Approved状态的PRD
2. 提交代码前，必须有通过审核的开发计划
3. 分支必须符合命名规范

## 分支命名规范
```
<类型>/<任务ID>-<任务描述>
```

类型:
- `feature/` - 新功能
- `bugfix/` - 缺陷修复
- `hotfix/` - 紧急修复
- `release/` - 发布准备
- `refactor/` - 代码重构

## 分支生命周期集成
1. **创建阶段**
   - 检查流程前置条件
   - 基于最新的主分支创建
   - 记录分支创建时间和关联任务

2. **开发阶段**
   - 追踪分支状态和提交历史
   - 自动更新关联任务状态
   - 定期提示与主分支同步

3. **完成阶段**
   - 创建合并请求
   - 触发代码审核流程
   - 合并后自动标记任务完成

## 示例

<example>
  用户: `/branch --create --task=T2.3 --switch`

  系统响应:
  ```
  ✅ 分支创建并切换成功!

  分支名: feature/T2.3-document-system
  关联任务: T2.3 "文档管理系统"

  Git操作:
  - 基于 develop 创建
  - 已切换到新分支
  - 远程仓库已更新

  当前工作分支已设置为 feature/T2.3-document-system
  任务 T2.3 已设为活跃任务
  ```

  用户: `/branch`

  系统响应:
  ```
  🌿 当前任务分支信息

  任务: T2.3 "文档管理系统"
  关联分支: feature/T2.3-document-system
  分支状态: 活跃 (当前工作分支)
  创建时间: 2024-01-20 (今天)
  最后提交: 无提交

  下一步推荐操作:
  1. 编写代码实现功能
  2. 使用规范提交消息提交更改
  3. 完成后使用 /check review 检查质量
  ```
</example>

<example type="invalid">
  用户: `/branch --create`

  系统响应:
  ```
  ❌ 缺少任务ID

  创建分支时必须指定关联的任务ID

  正确用法:
  /branch --create --task=任务ID [--name=分支名] [--switch]
  ```

  用户: `/branch --create --task=T2.3`

  系统响应:
  ```
  ❌ 流程检查未通过

  无法创建分支，原因:
  - T2.3任务没有关联的已批准PRD文档

  请先执行:
  1. 使用 /story 创建并完成PRD文档
  2. 通过 /check prd T2.3 验证PRD状态
  ```
</example>
