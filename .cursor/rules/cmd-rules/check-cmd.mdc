---
description:当用户输入/check命令时,执行进度检查命令
globs:
alwaysApply: false
---

# VibeCopilot 进度检查命令处理器

## 关键规则

- 当用户输入`/check`命令时，展示项目当前开发进度和状态概览
- 支持检查特定类型或ID的详细进度信息
- 显示进度条、百分比和关键统计数据
- 突出显示关键路径任务和潜在风险
- 提供待完成和已完成任务的统计
- 根据依赖关系提供后续步骤建议
- 支持项目架构分析和图表生成

## 用户交互规范

- 快速响应用户`/check`命令，确保统一格式的输出
- 命令输入错误时提供清晰的纠正提示
- 缺少必要参数时自动推断或提示补充
- 始终提供操作成功或失败的明确反馈
- 使用emoji、进度条和格式化输出增强可读性
- 出现路径错误时提供存在的有效路径选项

## 命令格式规范

基本语法: `/check [--type=类型] [--id=标识符] [--status=状态] [--update] [--init] [--project=项目路径]`

参数说明:
- `--type`: 可选，检查类型，可选值为`epic`、`story`、`task`、`roadmap`
- `--id`: 可选，特定项目标识符，如`epic-001`、`story-002`等
- `--status`: 可选，筛选特定状态，如`pending`、`in-progress`、`completed`
- `--update`: 可选，更新本地路线图文件
- `--init`: 可选，初始化路线图
- `--project`: 可选，项目路径，用于分析项目结构并生成架构图
- `--output`: 可选，指定项目分析输出目录，默认为.ai目录下的'gitmap_output'
- `--instructions`: 可选，自定义项目分析指令，如'突出显示数据流'

### 路线图检查命令
基本语法: `/check roadmap`

作用: 检查当前路线图所处的阶段，显示里程碑进度和下一步建议。

### 项目架构分析命令
基本语法: `/check --project=项目路径 [--output=输出目录] [--instructions=分析指令]`

作用: 分析项目结构并生成架构图，包括组件关系和数据流。

## 命令执行流程

1. **参数解析**: 解析命令参数并验证
2. **数据加载**: 读取.ai/roadmap/current.yaml文件和GitHub数据(如配置)
3. **数据处理**: 计算项目进度和统计信息
4. **结果格式化**: 根据参数生成输出内容
5. **数据更新**: 如有--update参数，更新本地文件
6. **项目分析**: 如有--project参数，调用scripts/gitdiagram/gitmap.sh进行项目分析

## 显示内容规范

### 整体进度检查 (`/check`)

显示内容包括整体进度、当前活跃史诗、待完成/已完成任务数量、关键路径任务和后续建议。

```
🔍 项目开发状态检查

当前活跃史诗: Epic-001 "Cursor规则增强系统"
总体进度: ███████░░░ 70%

待完成任务: 3
已完成任务: 7

关键路径任务:
▪ task-005: 实现敏捷故事管理 (进行中，75%)
▪ task-007: 集成Memory系统 (待开始)

下一步建议: 完成task-005后开始task-007
```

### 特定类型检查 (`/check --type=类型`)

根据类型显示相应的项目列表、状态和进度信息。

```
📊 Epic状态检查

Epic列表:
✅ epic-001: 开发命令系统 (已完成)
🚧 epic-002: Cursor规则增强系统 (进行中，70%)
⏱️ epic-003: Memory系统集成 (计划中)

当前活跃Epic: epic-002
包含故事: 3个 (2完成，1进行中)
预计完成时间: 2023-04-30
```

### 路线图检查 (`/check roadmap`)

显示当前路线图的阶段和各里程碑的进展信息。

```
📈 路线图状态检查

当前处于阶段: M1 "基础架构强化阶段"
总体进度: ██████░░░░ 60%

里程碑进度:
▶️ M1: 基础架构强化阶段 (进行中, 60%)
⏱️ M2: AI能力集成阶段 (计划中)
⏱️ M3: 自动化流程阶段 (计划中)
⏱️ M4: 用户体验与生态阶段 (计划中)

当前关键任务:
▪ T1.1: 核心模块功能增强 (进行中, 80%)
▪ T1.2: 命令行界面完善 (进行中, 50%)

下一阶段预计开始时间: 2024-05-16
```

### 特定项目检查 (`/check --id=标识符`)

显示特定项目的详细信息，包括子项目列表、进度和变更历史。

### 项目架构分析 (`/check --project=项目路径`)

显示项目结构分析和架构图的生成结果。

```
📊 项目架构分析

分析项目: /path/to/project
输出目录: ./gitmap_output

已生成以下文件:
▪ 项目说明: ./gitmap_output/project_name_explanation.md
▪ 架构图: ./gitmap_output/project_name_diagram.md

架构图预览:
(此处显示Mermaid图表预览)

💡 提示:
- 您可以使用Markdown查看器查看生成的文件
- 也可将diagram.md中的图表代码粘贴到https://mermaid.live进行编辑
```

## 状态图

```mermaid
stateDiagram-v2
    [*] --> 参数解析
    参数解析 --> 数据加载: 常规检查
    参数解析 --> 项目分析: 有--project参数
    数据加载 --> 数据处理
    数据处理 --> 结果格式化
    项目分析 --> 结果格式化
    结果格式化 --> [*]

    state 数据处理 {
        [*] --> 计算进度
        计算进度 --> 识别关键路径
        识别关键路径 --> 生成建议
        生成建议 --> [*]
    }

    state 项目分析 {
        [*] --> 执行gitmap脚本
        执行gitmap脚本 --> 生成架构图
        生成架构图 --> 生成项目说明
        生成项目说明 --> [*]
    }

    数据加载 --> 数据更新: 如有--update参数
    数据更新 --> 结果格式化
```

## 示例与错误处理

<example>
  用户: `/check`

  系统响应:
  ```
  🔍 项目开发状态检查

  当前活跃史诗: Epic-001 "Cursor规则增强系统"
  总体进度: ███████░░░ 70%

  待完成任务: 3
  已完成任务: 7

  关键路径任务:
  ▪ task-005: 实现敏捷故事管理 (进行中，75%)
  ▪ task-007: 集成Memory系统 (待开始)

  下一步建议: 完成task-005后开始task-007
  ```

  用户: `/check --type=story`

  系统响应:
  ```
  📚 用户故事状态检查

  Epic-001 "Cursor规则增强系统" 下的故事:

  ✅ story-001: 实现开发命令系统 (已完成)
  🚧 story-002: 强制开发流程规范 (进行中，60%)
  ⏱️ story-003: 敏捷开发故事板 (待开始)

  活跃故事: story-002
  当前关注任务: task-003、task-004
  ```
</example>

## 错误处理与纠正提示

### 命令格式错误纠正

```
用户: `/cheq`

系统响应:
⚠️ 未找到命令: /cheq

您是否想要执行: /check ?
正确用法: /check [--type=类型] [--id=标识符] [--status=状态]

示例:
/check                # 检查整体项目状态
/check --type=epic    # 检查所有史诗状态
/check roadmap        # 检查路线图状态
```

### 参数错误纠正

```
用户: `/check --typ=epic`

系统响应:
⚠️ 未知参数: --typ=epic

您可能想使用: --type=epic
正确用法: /check [--type=类型] [--id=标识符] [--status=状态]
```

### 值错误纠正

```
用户: `/check --type=epics`

系统响应:
⚠️ 无效的类型值: epics

可用的类型值: epic, story, task, roadmap
例如: /check --type=epic
```

### 路径错误处理

```
用户: `/check --project=/nonexistent/path`

系统响应:
❌ 项目分析失败

错误: 项目路径不存在或不是目录: /nonexistent/path

请检查:
- 路径是否输入正确
- 目录是否存在
- 是否有足够的权限访问该目录

您可以尝试:
/check --project=/Users/chenyi/Projects/myapp
```

## 实现细节

从.ai/roadmap/current.yaml和GitHub API获取数据，使用进度计算逻辑处理，并格式化输出结果。
项目分析功能使用scripts/gitdiagram/gitmap.sh脚本实现，生成项目结构图和说明文档。

依赖模块:
- `src.cli.roadmap`: 路线图文件处理
- `src.cli.github_api`: GitHub项目数据集成
- `src.cli.formatter`: 输出格式化
- `scripts.gitdiagram.gitmap.sh`: 项目架构分析工具
