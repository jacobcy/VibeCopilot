---
description: 本规则定义了VibeCopilot的强制开发流程检查点，确保开发过程遵循标准化流程。应在以下情况下应用：(1)启动功能开发前，(2)提交代码前，(3)发起合并请求前，(4)发布版本前。规则负责在workflow-flow定义的生命周期中执行强制性验证，保证项目质量和流程规范性。
globs: ["*.ts", "*.tsx", "*.js", "*.jsx", "*.py", "*.md"]
alwaysApply: true
---
# VibeCopilot 强制开发流程检查点

## 核心定位

- 本规则为强制执行规则，确保开发者不能绕过流程
- 与workflow-instruction配合使用，flow为强制性检查点，workflow为具体指导
- 任何流程违规都会阻止开发继续，除非有特批豁免

## 开发流程强制检查点

### PRE-FLOW阶段（需求确认）
- **强制检查点 1**：开始任何开发前，必须有story-flow生成的Approved状态PRD文档
- **强制检查点 2**：PRD必须包含验收标准和优先级
- **检查方式**：`/check prd <功能名称>`
- **不合规处理**：阻止创建开发分支，退回到PRE-FLOW阶段

### FLOW阶段入口
- **强制检查点 3**：必须有spec-flow制定并批准的开发计划
- **强制检查点 4**：开发计划必须包含技术选型、架构设计和任务分解
- **检查方式**：`/check plan <功能名称>`
- **不合规处理**：阻止开始编码工作，要求完善开发计划

### 开发阶段（编码）
- **强制检查点 5**：代码提交必须遵循Conventional Commits规范
- **强制检查点 6**：代码文件不得超过200行
- **强制检查点 7**：必须编写单元测试，覆盖关键功能
- **检查方式**：提交前自动检查
- **不合规处理**：拒绝代码提交，提示修正

### 测试阶段
- **强制检查点 8**：整体测试覆盖率必须≥70%
- **强制检查点 9**：核心功能测试覆盖率必须≥85%
- **强制检查点 10**：必须通过所有自动化测试
- **检查方式**：`/check test <功能名称>`
- **不合规处理**：阻止进入审核阶段，要求增加测试

### 审核阶段
- **强制检查点 11**：必须通过代码审核，解决所有严重问题
- **强制检查点 12**：必须编写用户指南和开发指南
- **强制检查点 13**：API必须有完整文档
- **检查方式**：`/check review <功能名称>`
- **不合规处理**：阻止提交合并，要求完善

### 提交阶段
- **强制检查点 14**：合并前必须更新CHANGELOG.md
- **强制检查点 15**：必须使用正确的分支合并策略
- **强制检查点 16**：合并前必须解决所有冲突
- **检查方式**：合并操作前自动检查
- **不合规处理**：阻止合并操作

### POST-FLOW阶段
- **强制检查点 17**：必须记录项目经验教训
- **强制检查点 18**：更新相关规则（如需要）
- **检查方式**：`/check post <功能名称>`
- **不合规处理**：标记项目技术债，要求后续补充

## 紧急处理流程

在特殊情况下需要绕过流程时：
- 绕过记录自动存档，需在48小时内补齐流程
- 连续3次紧急处理将触发流程审查

## 流程检查示例

<example>
  # 流程强制执行示例

  ## PRE-FLOW检查

  ```bash
  # 尝试创建开发分支而没有approved的PRD
  $ git checkout -b feature/user-auth
  ❌ 流程错误: 未发现用户认证功能的Approved PRD
  🔄 请使用 /story 命令创建并完成PRD

  # 正确流程
  $ /check prd user-auth
  ✅ PRD状态: Approved (user-auth.md)
  ✅ 可以继续开发流程
  ```

  ## 开发计划检查

  ```bash
  # 尝试开始编码但没有开发计划
  $ /task start coding user-auth
  ❌ 流程错误: 未发现用户认证功能的开发计划
  🔄 请先使用 /plan 命令制定开发计划

  # 正确流程
  $ /check plan user-auth
  ✅ 开发计划状态: Approved
  ✅ 可以开始编码工作
  ```

  ## 提交检查

  ```bash
  # 提交不规范的代码
  $ git commit -m "加了登录功能"
  ❌ 提交消息不符合规范
  🔄 请使用格式: type(scope): description [task-id]

  # 提交超长文件
  $ git add src/long-file.ts
  ❌ src/long-file.ts 超过200行(实际312行)
  🔄 请拆分文件后再提交
  ```
</example>

<example type="invalid">
  # 违反强制流程的场景

  ```bash
  # 跳过PRD直接开发
  $ git checkout -b feature/random-idea
  $ touch src/random.ts
  $ git add .
  $ git commit -m "添加了自己的想法"

  # 不做测试直接提交
  $ git push origin feature/random-idea
  $ create_pull_request "合并我的新功能"

  # 不做审核直接合并
  $ git checkout main
  $ git merge feature/random-idea
  $ git push origin main
  ```
</example>
