---
description: 当用户输入/help命令时,执行帮助命令，解释命令用法和显示可用命令
globs:
alwaysApply: false
---

# VibeCopilot 帮助命令处理器

## 命令目的

`/help`命令用于显示VibeCopilot的帮助信息，包括可用命令列表、命令用法和示例。这是用户了解系统功能和使用方法的主要入口。当用户不清楚如何使用某个命令或需要了解系统功能时，可以使用该命令获取帮助。

## 关键规则

- 当用户输入`/help`命令时，显示所有可用命令的概览
- 当用户输入`/help [命令名]`时，显示特定命令的详细用法
- 当用户输入`/help rules`时，显示规则系统的使用方法
- 帮助信息应简洁明了，重点突出，易于理解
- 帮助信息应包含命令格式、参数说明和使用示例
- 帮助命令不应更改系统状态或执行实际操作

## 命令格式规范

基本语法: `/help [命令名称] [--detail=级别]`

参数说明:
- `命令名称`: 可选，指定要查看的命令名称
- `--detail`: 可选，指定帮助信息的详细程度，值为"basic"、"normal"或"full"

## 执行流程

1. 解析命令参数，确定用户查询的具体命令
2. 如果未指定特定命令，则显示所有可用命令的概述
3. 如果指定了特定命令，则查找并显示该命令的详细帮助信息
4. 根据detail参数调整显示的详细程度
5. 以易于阅读的格式呈现帮助信息

## 与规则系统集成

- `/help`命令与规则系统紧密集成，可以显示规则系统的使用方法
- 当用户输入`/help agent`时，显示专家角色系统的使用方法
- 当用户输入`/help rule`时，显示规则管理系统的使用方法
- 使用`{/agent}`和`{/rule}`格式可以直接激活相应的规则

## 命令示例说明

以下是`/help`命令的示例：

```
/help - 显示所有可用命令的概述
/help story - 显示story命令的详细用法
/help --detail=full - 显示所有命令的完整帮助信息
/help agent - 显示专家角色系统的使用方法
/help rule - 显示规则管理系统的使用方法
```

## 示例

<example>
  # 显示所有可用命令

  用户: `/help`

  系统响应:
  ```
  📚 VibeCopilot 命令帮助

  可用命令列表:
  1. /check - 检查项目状态和进度
  2. /update - 更新对象状态和进度
  3. /story - 管理开发故事和阶段
  4. /task - 管理项目任务
  5. /plan - 创建新计划和任务
  6. /branch - 管理与任务关联的分支
  7. /flow - 启动和管理开发流程
  8. /memory - 管理项目知识库
  9. /help - 显示命令帮助信息
  10. /agent - 激活专家角色系统
  11. /rule - 管理规则系统

  输入 /help [命令名] 查看特定命令的详细用法
  示例: /help story
  ```

  # 显示特定命令的帮助信息

  用户: `/help story`

  系统响应:
  ```
  📖 Story命令帮助

  用途: 管理开发故事和阶段

  基本语法: /story [子命令] [参数]

  可用子命令:
  - new: 创建新故事 - 示例: /story new 用户认证功能
  - confirm: 确认故事需求 - 示例: /story confirm S1.2
  - list: 列出所有故事 - 示例: /story list
  - status: 查看故事状态 - 示例: /story status S1.2

  常用参数:
  - --id: 指定故事ID - 示例: /story status --id=S1.2
  - --priority: 设置优先级 - 示例: /story new 用户认证 --priority=high

  更多信息请使用: /help story --detail=full
  ```

  # 显示规则系统帮助

  用户: `/help rule`

  系统响应:
  ```
  🔍 规则系统帮助

  VibeCopilot规则系统允许管理和激活开发规则，包括创建、修改和删除规则。

  基本命令:
  - /rule list - 列出所有可用规则
  - /rule view [规则名称] - 查看特定规则内容
  - /rule activate [规则名称] - 激活特定规则

  注释命令用法:
  使用 {/rule} 格式可以表示您是提及规则系统而非执行命令。例如:
  - “说到{/rule}命令，它用于管理规则” - 这里不会执行命令

  查看所有可用规则: /rule list --type=all
  ```

  # 显示专家角色系统帮助

  用户: `/help agent`

  系统响应:
  ```
  👨‍💻 专家角色系统帮助

  VibeCopilot专家角色系统允许AI扮演特定领域的专业角色，提供深度专业知识。

  基本命令:
  - /agent - 根据上下文自动选择适合的专家角色
  - /agent [角色名称] - 激活特定专家角色

  可用专家角色:
  - frontend - 前端开发专家
  - backend - 后端开发专家
  - architect - 架构设计专家
  - requirement - 需求分析专家
  - qa - 质量保障专家
  - document - 文档专家

  注释命令用法:
  使用 {/agent} 格式可以表示您是提及专家角色系统而非执行命令。例如:
  - “关于{/agent}命令，它用于激活专家角色” - 这里不会执行命令
  ```
</example>

<example type="invalid">
  # 错误示例：不正确的命令解析

  用户: `/help story`

  系统响应:
  ```
  Story命令用于创建和管理用户故事。

  要创建新故事，使用以下命令:
  /story create 名称 --desc="描述"

  要查看故事，使用:
  /story view ID
  ```

  问题: 未按照标准格式提供帮助信息，子命令与实际不符，缺少必要的参数说明和示例

  # 错误示例：过度复杂的帮助信息

  用户: `/help`

  系统响应:
  ```
  VibeCopilot帮助系统

  这是一个非常强大的系统，可以做很多很多事情，包括但不限于...
  [接下来是5页的功能说明]
  ```

  问题: 帮助信息过于冗长，没有突出重点，用户难以快速找到需要的信息
</example>
