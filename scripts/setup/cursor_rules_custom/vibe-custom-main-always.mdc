---
description:
globs:
alwaysApply: true
---

# VibeCopilot 用户项目主规则

## 核心规则

- 适用于用户项目的规则主入口
- 根据项目结构和特点自动调用适当的规则
- 确保项目开发符合最佳实践标准
- 针对项目上下文提供智能建议和辅助
- 优先采用项目已有的约定和风格
- 与GitDiagram和GitHub Projects集成
- 针对不同开发阶段提供匹配的辅助工具

## 规则调度机制

本规则会根据用户项目的特点和上下文，自动调度以下功能：

1. **项目分析**
   - 自动识别项目类型和架构
   - 分析代码结构和组织模式
   - 识别使用的框架和库
   - 提取编码规范和约定

2. **开发辅助**
   - 根据项目架构提供匹配的代码模板
   - 确保新代码与已有代码风格一致
   - 提供针对项目技术栈的最佳实践
   - 自动适应项目的命名约定

3. **集成增强**
   - 与GitDiagram集成，利用仓库结构信息
   - 与GitHub Projects集成，了解任务进展
   - 基于提交历史优化建议
   - 利用项目Issue和PR提供上下文

## 适应性规则

本规则具有高度适应性，会根据以下不同情境进行调整：

- **不同项目类型**: Web、移动应用、后端服务、库等
- **不同语言**: JavaScript/TypeScript、Python、Java等
- **不同框架**: React、Vue、Express、Django等
- **不同开发阶段**: 规划、实现、测试、发布等

## 示例

<example>
用户：请帮我实现用户认证功能

AI：(分析项目结构和技术栈)
根据您的项目，我注意到您使用的是Express和MongoDB。我会按照您项目中现有的模式来实现用户认证功能...
</example>

<example>
用户：为这个组件添加单元测试

AI：(分析测试框架和现有测试)
我看到您的项目使用Jest和React Testing Library。我会遵循您现有的测试模式编写单元测试...
</example>

## 与核心规则协调

本规则与`rule-generating-agent`核心规则协同工作，在保持通用规则的基础上，提供针对特定用户项目的定制化支持。
